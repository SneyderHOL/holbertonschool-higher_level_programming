The ``1-my_list`` module
============================

Using ``print_sorted``
-----------------------------

Import MyList from 1-my_list:
     >>> MyList = __import__('1-my_list').MyList


Checking for module docstring:
    >>> len(__import__("1-my_list").__doc__) > 1
    True

Checking for class docstring:
    >>> len(__import__("1-my_list").MyList.__doc__) > 1
    True

Checking for method docstring
    >>> len(__import__("1-my_list").MyList.print_sorted.__doc__) > 1
    True

-----------------------------
    Base test

    >>> lst = MyList([10, 2, 1, 14, 5, 16])
    >>> lst.print_sorted()
    [1, 2, 5, 10, 14, 16]

    >>> lst = MyList()
    >>> lst.print_sorted()
    []


-----------------------------
    Wrong type test

    >>> lst = MyList(2)
    Traceback (most recent call last):
    TypeError: 'int' object is not iterable

    >>> lst = MyList(None)
    Traceback (most recent call last):
    TypeError: 'NoneType' object is not iterable

    >>> lst = MyList((2, 1, 3))
    >>> lst.print_sorted()
    [1, 2, 3]

    >>> lst = MyList(True)
    Traceback (most recent call last):
    TypeError: 'bool' object is not iterable

    >>> lst = MyList([1], 2)
    Traceback (most recent call last):
    TypeError: list() takes at most 1 argument (2 given)

-----------------------------
    list type with different elements test

    >>> lst = MyList([[1, 3, 6], [2]])
    >>> lst.print_sorted()
    [[1, 3, 6], [2]]

    >>> lst = MyList([[None, 1, 3, 6], [2]])
    >>> lst.print_sorted()
    Traceback (most recent call last):
    TypeError: unorderable types: int() < NoneType()
