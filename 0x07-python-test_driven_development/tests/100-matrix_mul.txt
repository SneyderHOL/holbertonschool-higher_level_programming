The ``100-matrix_mul`` module
============================

Using ``matrix_mul``
---------------------

Import matrix_mul from 100-matrix_mul:
    >>> matrix_mul = __import__('100-matrix_mul').matrix_mul

-----------------------------
    Base test
    >>> matrix_mul([[1, 2], [3, 4]], [[1, 2], [3, 4]])
    [[7, 10], [15, 22]]
    >>> matrix_mul([[1, 2]], [[3, 4], [5, 6]])
    [[13, 16]]
    >>> matrix_mul([[1.25, 2.25]], [[3.25, 4.25], [5.25, 6.25]])
    [[15.875, 19.375]]
    >>> matrix_mul([[2]], [[4.0]])
    [[8.0]]

-----------------------------
    No arguments provided

    >>> matrix_mul()
    Traceback (most recent call last):
    TypeError: matrix_mul() missing 2 required positional arguments: 'm_a' and 'm_b'
    >>> matrix_mul([[1, 2], [3, 4]])
    Traceback (most recent call last):
    TypeError: matrix_mul() missing 1 required positional argument: 'm_b'

-----------------------------
    None arguments

    >>> matrix_mul(None, None)
    Traceback (most recent call last):
    TypeError: m_a must be a list

    >>> matrix_mul([[1, 1.1], [2, 3]], None)
    Traceback (most recent call last):
    TypeError: m_b must be a list

    >>> matrix_mul([None, [2, 3]], [[3, 4], [5, 6]])
    Traceback (most recent call last):
    TypeError: m_a must be a list of lists

-----------------------------
    Empty arrays as arguments

    >>> matrix_mul([], [[2, 3]])
    Traceback (most recent call last):
    ValueError: m_a can't be empty

    >>> matrix_mul([[1, 1.1], [2, 3]], [[]])
    Traceback (most recent call last):
    ValueError: m_b can't be empty

-----------------------------
    Wrong size of arrays as arguments

    >>> matrix_mul([[1, 2], [3, 4], [5, 6, 7]], [[2, 3]])
    Traceback (most recent call last):
    TypeError: each row of m_a must be of the same size

    >>> matrix_mul([[1, 2], [2, 3]], [[2, 7], [1], [4, 1]])
    Traceback (most recent call last):
    TypeError: each row of m_b must be of the same size

    >>> matrix_mul([[1, 2], [3, 4], [5, 6]], [[2, 3, 7], [9, 6, 4], [8, 7, 4]])
    Traceback (most recent call last):
    ValueError: m_a and m_b can't be multiplied

-----------------------------
    Wrong type of arguments

    >>> matrix_mul(1, 2)
    Traceback (most recent call last):
    TypeError: m_a must be a list

    >>> matrix_mul([[1, 2], [2, 3]], True)
    Traceback (most recent call last):
    TypeError: m_b must be a list

    >>> matrix_mul(((True, False)), [[3, 4], [5, 6]])
    Traceback (most recent call last):
    TypeError: m_a must be a list

    >>> matrix_mul([[1, 2], [2, 3]], (1,2))
    Traceback (most recent call last):
    TypeError: m_b must be a list

-----------------------------
    Wrong type of elements in the lists

    >>> matrix_mul([True, False], [[3, 4], [5, 6]])
    Traceback (most recent call last):
    TypeError: m_a must be a list of lists

    >>> matrix_mul([[1, 1.1], [2, 3]], [(1,2)])
    Traceback (most recent call last):
    TypeError: m_b must be a list of lists

    >>> matrix_mul([1, 2], [[3, 4], [5, 6]])
    Traceback (most recent call last):
    TypeError: m_a must be a list of lists

    >>> matrix_mul([[1, 6], [2, 3]], [2.5, 3.2])
    Traceback (most recent call last):
    TypeError: m_b must be a list of lists

    >>> matrix_mul([[3, 4], None], [[5, 6], [2, 3]])
    Traceback (most recent call last):
    TypeError: m_a must be a list of lists

    >>> matrix_mul([[5, 6], [2, 3]], [[3, 4], None])
    Traceback (most recent call last):
    TypeError: m_b must be a list of lists

    >>> matrix_mul([[5, 6], True, False, [2, 3]], [[3, 4], [1, 4]])
    Traceback (most recent call last):
    TypeError: m_a must be a list of lists

    >>> matrix_mul([[5, 6], [2, 3]], [[3, 4], (1,)])
    Traceback (most recent call last):
    TypeError: m_b must be a list of lists

    >>> matrix_mul([[5, 6], [True, False]], [[3, 4], [1, 4]])
    Traceback (most recent call last):
    TypeError: m_a should contain only integers or floats

    >>> matrix_mul([[5, 6], [2, 3]], [[3, 4], [(1,), False]])
    Traceback (most recent call last):
    TypeError: m_b should contain only integers or floats

----------------------------------------
doubt, same size message or integer or float message
    >>> matrix_mul([[5, 6], [2, 3]], [[3, 4], [(1,)]])
    Traceback (most recent call last):
    TypeError: each row of m_b must be of the same size
